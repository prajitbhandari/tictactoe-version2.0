exit
@current_player
exit
clear
current_player
exit
current_player
move
exit
clear
exit
register_move(move, current_player)
exit
clear
exit
register_move(move, current_player)
move
current_player
move
exit
clear
is_move_out_of_boundary?
if cells[@current_player.get_next_move.row][@current_player.get_next_move.col] == "X"||
cells[@current_player.get_next_move.row][@current_player.get_next_move.col]
cells[0][0]
cells[@current_player.get_next_move.row][@current_player.get_next_move.col]
exit
clear
cells[0][2]
exit
eexit
cells[0][2]
0
cells[1][1]
cells
cells[1][2]
cells[0][0]
exit
cells[0][0]
cells[0][0].empty?
exit
clear
is_move_out_of_boundary?
is_move_out_0f_boundary?
is_duplicate_move?
exit
is_duplicate_move?
exit
cells[@current_player.get_next_move.row][@current_player.get_next_move.col].empty?
exit
cells[@current_player.get_next_move.row][@current_player.get_next_move.col].empty?
cells[@current_player.get_next_move.row][@current_player.get_next_move.col].class
cells[@current_player.get_next_move.row][@current_player.get_next_move.col]
 if cells[@current_player.get_next_move.row][@current_player.get_next_move.col]
exit
@board.is_valid_move?
exit
@board.is_valid_move?
@board.is_move_out_of_boundary?
exit
@board.is_valid_move?
exit
!@board.is_valid_move?
! @board.is_valid_move?
puts @board.is_valid_move?
@board.is_valid_move?
exit
@b.left_diagonal_win?
exit
left_diagonal_win?
exit
@b.register_move(@current_move, @current_player)
exit
@b.register_move(@current_move, @current_player)
@b.register_move(@current_move)
exit
@b.register_move(@current_move)
exit
@b.register_move(@current_move)
exit
@b.register_move(@current_move)
@current_move
exit
@current_move
@b.register_move(@current_move)
@current_move.is_valid_move?
exit
@current_move.is_valid_move?
exit
@current_move.is_valid_move?
@current_move
